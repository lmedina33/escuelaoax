<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Tutor', 'doctrine');

/**
 * BaseTutor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_tutor
 * @property string $nombre
 * @property string $ap_paterno
 * @property string $ap_materno
 * @property string $tel
 * @property string $cel
 * @property string $calle
 * @property integer $calle_numero
 * @property integer $clave_municipio
 * @property integer $clave_localidad
 * @property Municipios $Municipios
 * @property Localidad $Localidad
 * @property Doctrine_Collection $Alumno
 * 
 * @method integer             getIdTutor()         Returns the current record's "id_tutor" value
 * @method string              getNombre()          Returns the current record's "nombre" value
 * @method string              getApPaterno()       Returns the current record's "ap_paterno" value
 * @method string              getApMaterno()       Returns the current record's "ap_materno" value
 * @method string              getTel()             Returns the current record's "tel" value
 * @method string              getCel()             Returns the current record's "cel" value
 * @method string              getCalle()           Returns the current record's "calle" value
 * @method integer             getCalleNumero()     Returns the current record's "calle_numero" value
 * @method integer             getClaveMunicipio()  Returns the current record's "clave_municipio" value
 * @method integer             getClaveLocalidad()  Returns the current record's "clave_localidad" value
 * @method Municipios          getMunicipios()      Returns the current record's "Municipios" value
 * @method Localidad           getLocalidad()       Returns the current record's "Localidad" value
 * @method Doctrine_Collection getAlumno()          Returns the current record's "Alumno" collection
 * @method Tutor               setIdTutor()         Sets the current record's "id_tutor" value
 * @method Tutor               setNombre()          Sets the current record's "nombre" value
 * @method Tutor               setApPaterno()       Sets the current record's "ap_paterno" value
 * @method Tutor               setApMaterno()       Sets the current record's "ap_materno" value
 * @method Tutor               setTel()             Sets the current record's "tel" value
 * @method Tutor               setCel()             Sets the current record's "cel" value
 * @method Tutor               setCalle()           Sets the current record's "calle" value
 * @method Tutor               setCalleNumero()     Sets the current record's "calle_numero" value
 * @method Tutor               setClaveMunicipio()  Sets the current record's "clave_municipio" value
 * @method Tutor               setClaveLocalidad()  Sets the current record's "clave_localidad" value
 * @method Tutor               setMunicipios()      Sets the current record's "Municipios" value
 * @method Tutor               setLocalidad()       Sets the current record's "Localidad" value
 * @method Tutor               setAlumno()          Sets the current record's "Alumno" collection
 * 
 * @package    escuela
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTutor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tutor');
        $this->hasColumn('id_tutor', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nombre', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('ap_paterno', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('ap_materno', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('tel', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('cel', 'string', 17, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 17,
             ));
        $this->hasColumn('calle', 'string', 80, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 80,
             ));
        $this->hasColumn('calle_numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('clave_municipio', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('clave_localidad', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Municipios', array(
             'local' => 'clave_municipio',
             'foreign' => 'clave_municipio'));

        $this->hasOne('Localidad', array(
             'local' => 'clave_localidad',
             'foreign' => 'clave_localidad'));

        $this->hasMany('Alumno', array(
             'local' => 'id_tutor',
             'foreign' => 'id_tutor'));
    }
}