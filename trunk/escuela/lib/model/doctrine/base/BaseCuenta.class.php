<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cuenta', 'doctrine');

/**
 * BaseCuenta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_cuenta
 * @property string $usuario
 * @property string $contrasenia
 * @property integer $rolid_rol
 * @property Rol $Rol
 * @property Doctrine_Collection $Profesor
 * 
 * @method integer             getIdCuenta()    Returns the current record's "id_cuenta" value
 * @method string              getUsuario()     Returns the current record's "usuario" value
 * @method string              getContrasenia() Returns the current record's "contrasenia" value
 * @method integer             getRolidRol()    Returns the current record's "rolid_rol" value
 * @method Rol                 getRol()         Returns the current record's "Rol" value
 * @method Doctrine_Collection getProfesor()    Returns the current record's "Profesor" collection
 * @method Cuenta              setIdCuenta()    Sets the current record's "id_cuenta" value
 * @method Cuenta              setUsuario()     Sets the current record's "usuario" value
 * @method Cuenta              setContrasenia() Sets the current record's "contrasenia" value
 * @method Cuenta              setRolidRol()    Sets the current record's "rolid_rol" value
 * @method Cuenta              setRol()         Sets the current record's "Rol" value
 * @method Cuenta              setProfesor()    Sets the current record's "Profesor" collection
 * 
 * @package    escuela
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCuenta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cuenta');
        $this->hasColumn('id_cuenta', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('usuario', 'string', 40, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('contrasenia', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('rolid_rol', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Rol', array(
             'local' => 'rolid_rol',
             'foreign' => 'id_rol'));

        $this->hasMany('Profesor', array(
             'local' => 'id_cuenta',
             'foreign' => 'cuentaid_cuenta'));
    }
}